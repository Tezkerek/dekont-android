package ro.ande.dekont

import android.content.Context
import android.widget.Toast
import okhttp3.*
import org.json.JSONObject
import retrofit2.Call
import retrofit2.Retrofit

const val BASE_URL = "http://192.168.0.52:8000"

val jsonMediaType by lazy { MediaType.parse("application/json; charset=utf-8") }
private fun createJsonRequestBody(json: JSONObject): RequestBody {
    return RequestBody.create(jsonMediaType, json.toString())
}




class DekontApi constructor(private val mContext: Context) {
    val okHttpClient: OkHttpClient by lazy {
        OkHttpClient.Builder()
                .addInterceptor { chain: Interceptor.Chain ->
                    val request = chain.request()
                    val response = chain.proceed(request)

                    if (response.code() == 500) {
                        Toast.makeText(mContext, R.string.error_internal_server_error, Toast.LENGTH_SHORT).show()
                    }

                    response
                }
                .build()
    }

    /**
     * The DekontService implementation generated by Retrofit
     */
    val dekontService: DekontService by lazy {
        Retrofit.Builder()
                .baseUrl(BASE_URL)
                .client(okHttpClient)
                .build()
                .create(DekontService::class.java)
    }

    val authToken: String? by lazy {
        mContext.getSharedPreferences(SHARED_PREFERENCES_NAME, Context.MODE_PRIVATE).getString(SHARED_PREFERENCES_TOKEN_KEY, null)
    }

    fun isLoggedIn() = authToken != null

    /**
     * Attempt login.
     */
    fun login(email: String, password: String, name: String): Call<ResponseBody> {
        val jsonData = JSONObject(mapOf(
                "email" to email,
                "password" to password,
                "name" to name
        ))

        return dekontService.login(createJsonRequestBody(jsonData))
    }

    fun verifyLogin(): Call<ResponseBody> {
        return dekontService.verifyAuthToken(this.authToken ?: "")
    }

    companion object {
        const val SHARED_PREFERENCES_NAME = "auth"
        const val SHARED_PREFERENCES_TOKEN_KEY = "token"
    }
}